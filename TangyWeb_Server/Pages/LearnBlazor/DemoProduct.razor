@page "/learnBlazor/demoProduct"
@using Tangy_Models.LearnBlazorModels;
@using TangyWeb_Server.Pages.LearnBlazor.LearnBlazorComponents

<h3 class="text-danger">DemoProduct</h3>
<p>Favorites Total: @SelectedFavoriteCount</p>
<p>Last Selected Product: @LastSelectedProductName</p> 
<div class="row">
  @foreach (var item in Products)
  {
    <_SingleProduct Product="item"
                    OnFavoriteUpdated="FavoriteCountUpdate"
                    OnLastSelectedProductChange="SelectedProductUpdate">
    </_SingleProduct>
  }
</div>


@code {
  List<Demo_Product> Products = new();
  private int SelectedFavoriteCount { get; set; } = 0;
  private string LastSelectedProductName { get; set; }

  protected override void OnInitialized()
  {
    Products.Add(new()
      {
        Id = 1,
        Name = "Midnight Blaze",
        IsActive = false,
        ProductProperties = new()
      {
        new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose" },
        new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz" },
        new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
      }
      });

    Products.Add(new()
      {
        Id = 2,
        Name = "Blossom Lily",
        IsActive = true,
        ProductProperties = new()
      {
        new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
        new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
        new Demo_ProductProp { Id = 3, Key = "Color", Value = "White" }
      }
      });
  }

  protected void FavoriteCountUpdate(bool isSelected)
  {
    if (isSelected)
    {
      SelectedFavoriteCount++;
    }
    else
    {
      SelectedFavoriteCount--;
    }
  }

  protected void SelectedProductUpdate(string productName)
  {
    LastSelectedProductName = productName;
  }
}
