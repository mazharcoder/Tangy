@page "/learnBlazor/learnRouting/{parameter1}"
@page "/learnBlazor/learnRouting/{parameter1:int}/{parameter2}"
@page "/learnBlazor/learnRouting"
@page "/learnRouting"

@inject NavigationManager _NavigationManager;

<h3>LearnRouting</h3>

<h4>Parameter 1: @Parameter1</h4>
<h4>Parameter 2: @Parameter2</h4>

@* <a class="btn btn-primary" href="learnRouting?Param1=Tangy&Param2=Blazor">Navigate to query params</a> *@
<button @onclick="NavigateToQueryParams" class="btn btn-primary">Navigate to query params</button>
<button class="btn btn-primary" @onclick="LoadParameters">Load Parameters</button>

<h3>Query String Parameters: </h3>

<h4>Param 1: @Param1</h4>
<h4>Param 2: @Param2</h4>

@code {
  [Parameter]
  public int Parameter1 { get; set; }

  [Parameter]
  public string Parameter2 { get; set; }

  public string Param1 { get; set; }
  public string Param2 { get; set; }

  private void LoadParameters()
  {
    var absoulteUri = new Uri(_NavigationManager.Uri);
    var queryParam = System.Web.HttpUtility.ParseQueryString(absoulteUri.Query);

    Param1 = queryParam["Param1"];
    Param2 = queryParam["Param2"];

  }

  private void NavigateToQueryParams()
  {
    _NavigationManager.NavigateTo("learnRouting?Param1=Tangy&Param2=Blazor");
  }
}
